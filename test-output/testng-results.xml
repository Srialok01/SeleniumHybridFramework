<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="960" started-at="2017-07-30T17:41:36Z" finished-at="2017-07-30T17:41:37Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="960" started-at="2017-07-30T17:41:36Z" finished-at="2017-07-30T17:41:37Z">
      <class name="Testcases.VerifyLogInPagewithReportandScreenshot">
        <test-method status="FAIL" signature="Setup()[pri:0, instance:Testcases.VerifyLogInPagewithReportandScreenshot@29774679]" name="Setup" is-config="true" duration-ms="0" started-at="2017-07-30T23:11:36Z" finished-at="2017-07-30T23:11:36Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: F:\GitFramework\.\chromedriver_win32\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: F:\GitFramework\.\chromedriver_win32\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:518)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:330)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:124)
	at Factory.BrowserFactory.getBrowser(BrowserFactory.java:33)
	at Testcases.VerifyLogInPagewithReportandScreenshot.Setup(VerifyLogInPagewithReportandScreenshot.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method status="SKIP" signature="verifyTestcase()[pri:0, instance:Testcases.VerifyLogInPagewithReportandScreenshot@29774679]" name="verifyTestcase" duration-ms="3" started-at="2017-07-30T23:11:37Z" finished-at="2017-07-30T23:11:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestcase -->
        <test-method status="SKIP" signature="CloseBrowser(org.testng.ITestResult)[pri:0, instance:Testcases.VerifyLogInPagewithReportandScreenshot@29774679]" name="CloseBrowser" is-config="true" duration-ms="0" started-at="2017-07-30T23:11:37Z" finished-at="2017-07-30T23:11:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- Testcases.VerifyLogInPagewithReportandScreenshot -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
